import theme from "@/app/theme";
import AttachMoneyIcon from "@mui/icons-material/AttachMoney";
import CategoryIcon from "@mui/icons-material/Category";
import HomeIcon from "@mui/icons-material/Home";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import Box from "@mui/material/Box";
import CssBaseline from "@mui/material/CssBaseline";
import Divider from "@mui/material/Divider";
import Drawer from "@mui/material/Drawer";
import List from "@mui/material/List";
import ListItem from "@mui/material/ListItem";
import ListItemButton from "@mui/material/ListItemButton";
import ListItemIcon from "@mui/material/ListItemIcon";
import ListItemText from "@mui/material/ListItemText";
import { ThemeProvider } from "@mui/material/styles";
import Toolbar from "@mui/material/Toolbar";
import type { Metadata } from "next";
import { Geist, Geist_Mono, Roboto } from "next/font/google";
import Link from "next/link";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const roboto = Roboto({
  weight: ["300", "400", "500", "700"],
  subsets: ["latin"],
  display: "swap",
  variable: "--font-roboto",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const drawerWidth = 256;

const links = [
  { text: "Home", icon: <HomeIcon />, href: "/" },
  { text: "Expenses", icon: <AttachMoneyIcon />, href: "/expenses" },
  { text: "Categories", icon: <CategoryIcon />, href: "categories" },
];

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={
        `${geistSans.variable} ${geistMono.variable} ${roboto.variable}`
      }>
        <ThemeProvider theme={theme}>
          <AppRouterCacheProvider options={{ key: "css" }}>
            <Box sx={{ display: "flex" }}>
              <CssBaseline />

              <Drawer sx={{
                width: drawerWidth,
                flexShrink: 0,
                "& .MuiDrawer-paper": { width: drawerWidth, boxSizing: "border-box" },
              }}
                variant="permanent"
                anchor="left"
              >
                <Toolbar />
                <Divider />

                <List>
                  {links.map(link => (
                    <Link key={link.text} href={link.href}>
                      <ListItem disablePadding>
                        <ListItemButton>
                          <ListItemIcon>{link.icon}</ListItemIcon>

                          <ListItemText primary={link.text} />
                        </ListItemButton>
                      </ListItem>
                    </Link>
                  ))};
                </List>
              </Drawer>

              <Box
                component="main"
                sx={{ flexGrow: 1, bgcolor: "background.default", p: 3 }}
              >
                <Toolbar />
                {children}
              </Box>
            </Box>
          </AppRouterCacheProvider>
        </ThemeProvider>
      </body>
    </html >
  );
}
